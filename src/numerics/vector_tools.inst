// ---------------------------------------------------------------------
//
// Copyright (C) 2022 - 2023 by the ideal.II authors
//
// This file is part of the ideal.II library.
//
// The ideal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE.md at
// the top level directory of ideal.II.
//
// ---------------------------------------------------------------------

#ifndef __IDEAL_II_NUMERICS_VECTOR_TOOLS_HH_
#define __IDEAL_II_NUMERICS_VECTOR_TOOLS_HH_

namespace idealii::slab::VectorTools
{
    template void
    interpolate_boundary_values (
      idealii::slab::DoFHandler<2> &dof_handler ,
      const dealii::types::boundary_id boundary_component ,
      dealii::Function<2,double> &boundary_function ,
      std::shared_ptr<dealii::AffineConstraints<double>> spacetime_constraints ,
      const dealii::ComponentMask &component_mask = dealii::ComponentMask () );

    template void
    interpolate_boundary_values (
      idealii::slab::DoFHandler<3> &dof_handler ,
      const dealii::types::boundary_id boundary_component ,
      dealii::Function<3,double> &boundary_function ,
      std::shared_ptr<dealii::AffineConstraints<double>> spacetime_constraints ,
      const dealii::ComponentMask &component_mask = dealii::ComponentMask () );

    template void
    project_boundary_values_curl_conforming_l2 (
        idealii::slab::DoFHandler<2> &dof_handler ,
        unsigned int first_vector_component ,
        dealii::Function<2,double> &boundary_function ,
        const dealii::types::boundary_id boundary_component ,
        std::shared_ptr<dealii::AffineConstraints<double>> spacetime_constraints );

    template void
    project_boundary_values_curl_conforming_l2 (
        idealii::slab::DoFHandler<3> &dof_handler ,
        unsigned int first_vector_component ,
        dealii::Function<3,double> &boundary_function ,
        const dealii::types::boundary_id boundary_component ,
        std::shared_ptr<dealii::AffineConstraints<double>> spacetime_constraints );

    template double
    calculate_L2L2_squared_error_on_slab<2> (
      slab::DoFHandler<2> &dof_handler ,
      dealii::Vector<double> &spacetime_vector ,
      dealii::Function<2,double> &exact_solution ,
      spacetime::Quadrature<2> &quad );

    template double
    calculate_L2L2_squared_error_on_slab<3> (
      slab::DoFHandler<3> &dof_handler ,
      dealii::Vector<double> &spacetime_vector ,
      dealii::Function<3,double> &exact_solution ,
      spacetime::Quadrature<3> &quad );
}

#endif
